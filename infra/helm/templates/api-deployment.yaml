apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "analyticbot.fullname" . }}-api
  labels:
    {{- include "analyticbot.labels" . | nindent 4 }}
    component: api
spec:
  {{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "analyticbot.selectorLabels" . | nindent 6 }}
      component: api
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "analyticbot.selectorLabels" . | nindent 8 }}
        component: api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "analyticbot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command: ["uvicorn"]
          args:
            - "main:app"
            - "--host"
            - "0.0.0.0"
            - "--port"
            - "{{ .Values.api.service.port }}"
            - "--workers"
            - "{{ .Values.api.workers }}"
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
          env:
            - name: DATABASE_URL
              value: {{ include "analyticbot.databaseUrl" . | quote }}
            - name: REDIS_URL
              value: {{ include "analyticbot.redisUrl" . | quote }}
          envFrom:
            - configMapRef:
                name: {{ include "analyticbot.fullname" . }}-config
            - secretRef:
                name: {{ include "analyticbot.fullname" . }}-secret
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /app/data
            {{- end }}
      volumes:
        - name: logs
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "analyticbot.fullname" . }}-data
        {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
# AnalyticBot API Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "analyticbot.fullname" . }}-api
  labels:
    {{- include "analyticbot.labels" . | nindent 4 }}
    component: api
spec:
  type: {{ .Values.api.service.type }}
  ports:
    - port: {{ .Values.api.service.port }}
      targetPort: http
      protocol: TCP
      name: http
      {{- if and (eq .Values.api.service.type "NodePort") .Values.api.service.nodePort }}
      nodePort: {{ .Values.api.service.nodePort }}
      {{- end }}
  selector:
    {{- include "analyticbot.selectorLabels" . | nindent 4 }}
    component: api
