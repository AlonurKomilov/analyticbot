# AnalyticBot - Tool Configuration
# Dependencies are managed via pip-tools (requirements.in -> requirements.txt)

[tool.coverage.run]
source = ["apps", "core", "infra"]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/__pycache__/*",
    "docs/*",
    "scripts/*",
    "docker/*",
    "infra/k8s/*",
    "infra/terraform/*",
    "infra/helm/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [
    "docs/_archive/**",
    "docs/archive/**",
    "**/migrations/**",
    "**/venv/**",
    "**/__pycache__/**",
]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-q --cov=apps --cov=core --cov=infra --cov-report=term-missing --cov-report=html --cov-fail-under=80"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "performance: Performance tests",
    "security: Security tests",
    "slow: Slow running tests"
]

[project]
name = "analyticbot"
version = "0.1.0"
description = "AnalyticBot for Telegram"
requires-python = ">=3.11"
dependencies = [
    "aiogram==3.*",
    "aiogram_i18n>=1.4",
    "fastapi==0.116.*",
    "uvicorn[standard]==0.30.*",
    "SQLAlchemy[asyncio]==2.*",
    "asyncpg==0.29.*",
    "psycopg2-binary==2.*",
    "alembic==1.*",
    "celery[redis]==5.*",
    "redis==5.*",
    "pydantic==2.*",
    "pydantic-settings==2.*",
    "email-validator>=2.0.0",
    "dependency-injector==4.*",
    "telethon>=1.32.0",
    "slowapi>=0.1.9",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.20.0",
    "opentelemetry-instrumentation-requests>=0.41b0",
    "opentelemetry-instrumentation-asyncpg>=0.41b0",
    "Pillow>=10.0.0",
    "urlextract==1.*",
    "python-dotenv==1.*",
    "python-multipart==0.0.*",
    "prometheus-client==0.17.*",
    "gunicorn==21.*",
    "psutil==5.*",
    "qrcode[pil]>=7.0.0",
    "dash>=2.0.0",
    "plotly>=5.0.0",
    "reportlab>=4.0.0",
    "prophet>=1.1.0",
    "pmdarima>=2.0.0",
    "schedule>=1.2.0",
    "emoji>=2.0.0",
    "textstat>=0.7.0",
    "lightgbm>=4.0.0",
    "xgboost>=3.0.0",
    "nltk>=3.8",
    "passlib[bcrypt]>=1.7.0",
    "stripe>=7.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest==8.*",
    "pytest-asyncio==0.21.*",
    "httpx==0.24.*",
    "ruff==0.4.*",
    "aiosqlite==0.20.*",
]

[tool.importlinter]
root_packages = ["apps", "core", "infra"]
include_external_packages = true

[[tool.importlinter.contracts]]
name = "Core Layer Independence"
type = "forbidden"
source_modules = ["core.domain", "core.ports"]
forbidden_modules = ["apps", "infra", "core.services", "core.adapters"]

[[tool.importlinter.contracts]]
name = "Core Services Can Use Domain and Ports"
type = "forbidden"
source_modules = ["core.services"]
forbidden_modules = ["apps", "infra"]

[[tool.importlinter.contracts]]
name = "Infra Ports Adherence"
type = "forbidden"
source_modules = ["infra"]
forbidden_modules = ["apps"]

[[tool.importlinter.contracts]]
name = "Core Framework Independence"
type = "forbidden"
source_modules = ["core"]
forbidden_modules = [
    "fastapi",
    "sqlalchemy",
    "redis",
    "httpx",
    "asyncpg",
    "aiogram",
    "telegram"
]
# Note: aiohttp temporarily allowed in core.common_helpers.health_check (legacy code, 0% coverage)

[[tool.importlinter.contracts]]
name = "Apps Layer Boundaries"
type = "forbidden"
source_modules = ["apps.jobs"]
forbidden_modules = [
    "apps.bot",
    "apps.frontend"
]

[[tool.importlinter.contracts]]
name = "No Direct Infra Imports in Apps"
type = "forbidden"
source_modules = ["apps"]
forbidden_modules = [
    "infra.databases",
    "infra.redis",
    "infra.monitoring",
    "infra.security"
]

[[tool.importlinter.contracts]]
name = "Apps Clean Architecture (Phase 5 Complete)"
type = "forbidden"
source_modules = [
    "apps.api.routers",
    "apps.api.services",
    "apps.bot.handlers",
    "apps.bot.services",
    "apps.bot.adapters"
]
forbidden_modules = ["infra"]

# Note: apps.di.*, apps.api.di_analytics, and apps.mtproto.* intentionally allowed
# - apps.di.* are DI containers (composition roots) - MUST import concrete implementations
# - apps.api.di_analytics is a specialized DI container for Analytics V2
# - apps.mtproto.* is an infrastructure adapter layer
# - apps.bot.utils, apps.shared.* contain optional utilities
# These are NOT in source_modules above, so they can freely import infra
