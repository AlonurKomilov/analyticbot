name: Run Python Tests and Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: pip install poetry

      - name: Cache Poetry virtualenvs
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies with Poetry
        run: poetry install --no-root --with dev

      - name: Detect changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            deps:
              - 'requirements.txt'
              - 'pyproject.toml'
              - 'poetry.lock'
            code:
              - '**/*.py'
              - '!**/tests/**'
              - '!**/__init__.py'

      - name: Run security check for vulnerabilities in dependencies
        run: poetry run pip-audit

      - name: Run static analysis with flake8
        if: ${{ steps.filter.outputs.code == 'true' }}
        run: poetry run flake8

      - name: Run type checking with mypy
        if: ${{ steps.filter.outputs.code == 'true' }}
        run: poetry run mypy --install-types --non-interactive .

      - name: Run import sorting check with isort
        run: poetry run isort --check .

      - name: Run formatting check with black
        run: poetry run black --check .

      - name: Run tests with pytest
        run: poetry run pytest
