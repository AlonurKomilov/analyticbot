# docker-compose.prod.yml
# Production override for docker-compose.yml
# Usage: docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  # ---------- Database (Production Security) ----------
  db:
    # Remove all external port mappings for security
    ports: []
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
        failure_action: rollback
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ---------- Redis (Production Security) ----------
  redis:
    # Remove all external port mappings for security
    ports: []
    restart: always
    # Production Redis configuration
    command: ["redis-server", "--appendonly", "yes", "--maxmemory", "256mb", "--maxmemory-policy", "allkeys-lru"]
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ---------- API (Production Optimized) ----------
  api:
    restart: always
    # Production environment variables
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
      # Add production-specific settings here
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Production health check with tighter intervals
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:10300/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ---------- Bot (Production Optimized) ----------
  bot:
    restart: always
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ---------- Frontend (Production Optimized) ----------
  frontend:
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Enhanced production health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # ---------- MTProto (Production Configuration) ----------
  mtproto:
    restart: always
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
      # Production rate limiting (more conservative)
      - MTPROTO_REQUEST_DELAY=2
      - MTPROTO_BATCH_SIZE=50
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ---------- Worker (Production Configuration) ----------
  worker:
    restart: always
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ---------- Beat (Production Configuration) ----------
  beat:
    restart: always
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Production-specific networks with custom configuration
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: analyticbot-prod
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Production volume configuration with backup-friendly settings
volumes:
  pgdata:
    name: analyticbot_pgdata_prod
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_VOLUMES_PATH:-/var/lib/docker/volumes}/analyticbot_pgdata_prod

  redisdata:
    name: analyticbot_redisdata_prod
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_VOLUMES_PATH:-/var/lib/docker/volumes}/analyticbot_redisdata_prod