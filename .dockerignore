# .dockerignore for AnalyticBot - Optimized for build performance
# ================================================================

# Git and version control
.git/
.gitignore
.gitattributes
.github/

# Python cache and virtual environments
**/__pycache__/
**/*.pyc
**/*.pyo
**/*.pyd
**/*.egg-info/
.build/
.venv/
venv/
env/
.pytest_cache/
.mypy_cache/
.ruff_cache/
.coverage
htmlcov/
.tox/

# Environment files (security - exclude actual env files)
.env
.env.local
.env.development
.env.production
.env.test
.envrc
# But keep examples
!.env.*.example

# IDE and editor settings
.idea/
.vscode/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Frontend applications (Node.js/React)
**/node_modules/
**/dist/
**/build/
**/.vite/
**/.next/
**/npm-debug.log*
**/yarn-debug.log*
**/yarn-error.log*
apps/frontend/.env.local
apps/frontend/.env.production

# Logs and temporary files
logs/
var/logs/
*.log
tmp/
temp/
.tmp/

# Database and session files
*.db
*.sqlite
*.sqlite3
data/*.session

# Backup files
backups/
*.backup
*.bak
*.sql.gz

# Testing and CI/CD artifacts
tests/
test_*.py
*_test.py
test-results/
coverage.xml
junit.xml
.travis.yml
.circleci/
Jenkinsfile

# Documentation
docs/
examples/
README.md
CHANGELOG.md
*.md
!requirements*.txt

# Archive and deprecated
archive/
**/_archive/
**/archive/
old/
deprecated/

# Celery and background task files
celerybeat-schedule
celerybeat.pid

# Package management lock files (we use requirements.txt)
poetry.lock
Pipfile.lock
yarn.lock
package-lock.json

# Binary and compiled files
*.exe
*.dll
*.so
*.dylib

# OS specific files
.DS_Store
.AppleDouble
.LSOverride
Thumbs.db
ehthumbs.db
Desktop.ini

# Development and debug files
dev_*.py
test_local_*.py
debug_*.py
profile_*.prof
*.prof

# Jupyter and IPython
.ipynb_checkpoints/
profile_default/
ipython_config.py

# Performance monitoring
*.prof
