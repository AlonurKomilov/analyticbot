# ðŸ“Š PHASE 5.0: Prometheus Configuration
# Enterprise monitoring and alerting configuration

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'analyticbot-production'
    environment: 'production'

rule_files:
  - "rules/*.yml"
  - "alerts/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # AnalyticBot API monitoring
  - job_name: 'analyticbot-api'
    static_configs:
      - targets: ['api:8000']
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 5s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: api:8000

  # Performance API monitoring
  - job_name: 'analyticbot-performance'
    static_configs:
      - targets: ['api:8000']
    scrape_interval: 30s
    metrics_path: /performance/metrics
    scrape_timeout: 10s

  # Database monitoring (PostgreSQL)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'postgres:5432'

  # Redis monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'redis:6379'

  # Node exporter (system metrics)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'production-server'

  # Docker container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    honor_labels: true

  # Celery worker monitoring
  - job_name: 'celery'
    static_configs:
      - targets: ['celery-exporter:9540']
    scrape_interval: 30s
    metrics_path: /metrics

  # Nginx monitoring
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # Blackbox exporter for URL monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://api:8000/health
        - http://api:8000/docs
        - http://grafana:3000/api/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Custom business metrics
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['api:8000']
    scrape_interval: 60s
    metrics_path: /business/metrics
    scrape_timeout: 15s
    honor_timestamps: true

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "https://your-remote-storage/api/v1/write"
#     write_relabel_configs:
#       - source_labels: [__name__]
#         regex: 'high_cardinality_metric.*'
#         action: drop

# Service discovery
# kubernetes_sd_configs:
#   - role: pod
#     namespaces:
#       names:
#         - analyticbot

# Logging configuration
log_level: info
log_format: json
