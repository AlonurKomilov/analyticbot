# AnalyticBot - Unified Docker Compose
# Development and local testing environment

services:
  # ---------- Database ----------
  db:
    image: postgres:16
    container_name: analyticbot-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-analytic_bot}
      POSTGRES_USER: ${POSTGRES_USER:-analytic}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./infra/db/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-analytic} -d ${POSTGRES_DB:-analytic_bot}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ---------- Redis ----------
  redis:
    image: redis:7-alpine
    container_name: analyticbot-redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ---------- API Service ----------
  api:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile
      target: api
    container_name: analyticbot-api
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-analytic}:${POSTGRES_PASSWORD:-change_me}@db:5432/${POSTGRES_DB:-analytic_bot}
      REDIS_URL: redis://redis:6379/0
    env_file: 
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./var/results:/app/results
    restart: unless-stopped

  # ---------- Bot Service ----------
  bot:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile
      target: bot
    container_name: analyticbot-bot
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-analytic}:${POSTGRES_PASSWORD:-change_me}@db:5432/${POSTGRES_DB:-analytic_bot}
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # ---------- Celery Worker (optional) ----------
  worker:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile
      target: worker
    container_name: analyticbot-worker
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-analytic}:${POSTGRES_PASSWORD:-change_me}@db:5432/${POSTGRES_DB:-analytic_bot}
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - full

  # ---------- Celery Beat (optional) ----------
  beat:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile
      target: beat
    container_name: analyticbot-beat
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-analytic}:${POSTGRES_PASSWORD:-change_me}@db:5432/${POSTGRES_DB:-analytic_bot}
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - full

volumes:
  pgdata:
    name: analyticbot_pgdata
  redisdata:
    name: analyticbot_redisdata

networks:
  default:
    name: analyticbot_network
