apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "analyticbot.fullname" . }}-bot
  labels:
    {{- include "analyticbot.labels" . | nindent 4 }}
    component: bot
spec:
  replicas: {{ .Values.bot.replicaCount }}
  selector:
    matchLabels:
      {{- include "analyticbot.selectorLabels" . | nindent 6 }}
      component: bot
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "analyticbot.selectorLabels" . | nindent 8 }}
        component: bot
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "analyticbot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.bot.podSecurityContext | nindent 8 }}
      containers:
        - name: bot
          securityContext:
            {{- toYaml .Values.bot.securityContext | nindent 12 }}
          image: "{{ .Values.bot.image.repository }}:{{ .Values.bot.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.bot.image.pullPolicy }}
          command: ["python"]
          args: ["-m", "bot.main"]
          env:
            - name: DATABASE_URL
              value: {{ include "analyticbot.databaseUrl" . | quote }}
            - name: REDIS_URL
              value: {{ include "analyticbot.redisUrl" . | quote }}
          envFrom:
            - configMapRef:
                name: {{ include "analyticbot.fullname" . }}-config
            - secretRef:
                name: {{ include "analyticbot.fullname" . }}-secret
          livenessProbe:
            exec:
              command:
                - python
                - -c
                - "import asyncio, aiohttp; asyncio.run(aiohttp.ClientSession().get('http://localhost:8000/health').close())"
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - python
                - -c
                - "import redis; r = redis.from_url('{{ include "analyticbot.redisUrl" . }}'); r.ping()"
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.bot.resources | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /app/data
            {{- end }}
      volumes:
        - name: logs
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "analyticbot.fullname" . }}-data
        {{- end }}
      {{- with .Values.bot.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.bot.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.bot.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
