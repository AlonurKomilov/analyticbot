apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: analyticbot
  labels:
    app: celery-worker
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9540"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: celery-worker
        image: analyticbot/celery:latest
        imagePullPolicy: IfNotPresent
        command: ["celery", "-A", "apps.celery.celery_app", "worker", "--loglevel=info", "--concurrency=4"]
        ports:
        - containerPort: 9540
          name: metrics
        env:
        # Configuration from ConfigMap
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOG_LEVEL
        - name: TASK_MAX_RETRIES
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: TASK_MAX_RETRIES
        # Secrets
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: REDIS_URL
        - name: BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: BOT_TOKEN
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - celery
            - -A
            - apps.celery.celery_app
            - inspect
            - ping
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 10
          failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: analyticbot
  labels:
    app: celery-beat
    tier: scheduler
spec:
  replicas: 1  # Beat should run as single instance
  selector:
    matchLabels:
      app: celery-beat
  template:
    metadata:
      labels:
        app: celery-beat
        tier: scheduler
    spec:
      containers:
      - name: celery-beat
        image: analyticbot/celery:latest
        imagePullPolicy: IfNotPresent
        command: ["celery", "-A", "apps.celery.celery_app", "beat", "--loglevel=info"]
        env:
        # Configuration from ConfigMap
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOG_LEVEL
        # Secrets
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: REDIS_URL
        - name: BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: BOT_TOKEN
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        livenessProbe:
          exec:
            command:
            - pgrep
            - -f
            - "celery beat"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
