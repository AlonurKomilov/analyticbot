name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths: [ 'apps/frontend/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'apps/frontend/**' ]

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: apps/frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: apps/frontend
      run: npm ci
      
    - name: Run ESLint
      working-directory: apps/frontend
      run: npm run lint
      
    - name: Run tests
      working-directory: apps/frontend
      run: npm run test:run
      
    - name: Run accessibility tests
      working-directory: apps/frontend
      run: npm run test:a11y
      
    - name: Build application
      working-directory: apps/frontend
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: apps/frontend/dist

  frontend-security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: apps/frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: apps/frontend
      run: npm ci
      
    - name: Run security audit
      working-directory: apps/frontend
      run: npm audit --audit-level=high

  frontend-build:
    runs-on: ubuntu-latest
    needs: [frontend-test, frontend-security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: apps/frontend
        file: apps/frontend/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/analyticbot-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/analyticbot-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max